// Code generated by enum (github.com/mpkondrashin/enum). DO NOT EDIT

package iocscsv

import (
    "encoding/json"
    "errors"
    "fmt"
    "strconv"
    "strings"
)

type Vector int

const (
    VectorNetwork_activity Vector = iota
    VectorFinancial_fraud  Vector = iota
    VectorPayload_delivery Vector = iota
)


// String - return string representation for Vector value
func (v Vector)String() string {
    s, ok := map[Vector]string {
         VectorNetwork_activity: "Network activity",
         VectorFinancial_fraud:  "Financial fraud",
         VectorPayload_delivery: "Payload delivery",
    }[v]
    if ok {
        return s
    }
    return "Vector(" + strconv.FormatInt(int64(v), 10) + ")"
}

// ErrUnknownVector - will be returned wrapped when parsing string
// containing unrecognized value.
var ErrUnknownVector = errors.New("unknown Vector")


var mapVectorFromString = map[string]Vector{
    "network activity":    VectorNetwork_activity,
    "financial fraud":    VectorFinancial_fraud,
    "payload delivery":    VectorPayload_delivery,
}

// UnmarshalJSON implements the Unmarshaler interface of the json package for Vector.
func (s *Vector) UnmarshalJSON(data []byte) error {
    var v string
    if err := json.Unmarshal(data, &v); err != nil {
        return err
    }
    result, ok := mapVectorFromString[strings.ToLower(v)]
    if !ok {
        return fmt.Errorf("%w: %s", ErrUnknownVector, v)
    }
    *s = result
    return nil
}

// MarshalJSON implements the Marshaler interface of the json package for Vector.
func (s Vector) MarshalJSON() ([]byte, error) {
    return []byte(fmt.Sprintf("\"%v\"", s)), nil
}

// UnmarshalYAML implements the Unmarshaler interface of the yaml.v3 package for Vector.
func (s *Vector) UnmarshalYAML(unmarshal func(interface{}) error) error {
    var v string
    if err := unmarshal(&v); err != nil {
        return err
    }
    result, ok := mapVectorFromString[strings.ToLower(v)]  
    if !ok {
        return fmt.Errorf("%w: %s", ErrUnknownVector, v)
    }
    *s = result
    return nil
}
